{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "Liberty Mutual Dev API",
		"description": "",
		"contact": {
			"name": "Liberty Mutual",
			"url": "https://lmelg-api.mobileprogramming.net"
		}
	},
	"host": "lmelg-api.mobileprogramming.net",
	"basePath": "/",
	"schemes": [
		"https",
    "http"
	],
	"securityDefinitions": {
		"JWT": {
			"type": "apiKey",
			"name": "authorization",
			"in": "header",
			"description": "Enter valid API authorization token"
		}
	},
	"tags": [{
			"name": "User API",
			"description": "User API for Website."
		},
    {
      "name": "Admin API",
      "description": "Admin API for Admin Portal."
    },
		{
			"name": "Event Controller",
			"description": "API to manage users."
		}
	],
	"paths": {
 
    "/user/login": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Login User.",
        "description": "To login user into account",
        "operationId": "Login",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/signIn"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/signup": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "SignUp User.",
        "description": "To SignUp user into account (role=>Broker,Direct)",
        "operationId": "SignUp",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/signUp"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/resetPassword": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Reset Password.",
        "description": "To Reset Password",
        "operationId": "resetPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetPassword"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/changePassword": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Change Password.",
        "description": "To Change Password",
        "operationId": "change_password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changePassword"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/forgotPassword": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Forgot Password.",
        "description": "To Forgot Password",
        "operationId": "forgot_password",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/forgotPassword"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/resetForgotPassword": {
      "post": {
        "tags": [
          "User API"
        ],
        "summary": "Reset User.",
        "description": "To reset user password into account",
        "operationId": "resetForgotPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetForgotPassword"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/updateProfile": {
      "put": {
        "tags": [
          "User API"
        ],
        "summary": "Update Profile.",
        "description": "To update Profile",
        "operationId": "updateProfile",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProfile"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getProfile": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get User Profile.",
        "description": "To getProfile list",
        "operationId": "getProfile",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }               
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },   
    "/user/getProduct": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get Additional Voluntary Benefits.",
        "description": "To Additional Voluntary Benefits",
        "operationId": "getProduct",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "categoryId",
            "description": "categoryId number",
            "required": true,           
            "type": "integer"
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getVideo": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get Content Videos.",
        "description": "To Videos list",
        "operationId": "getVideo",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          } ,
          {
            "in": "query",
            "name": "categoryId",
            "description": "categoryId number",
            "required": true,  
            "type": "integer"
          }              
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getFAQ": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get FAQ.",
        "description": "To FAQ",
        "operationId": "getFAQ",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }               
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getProgram": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get program, email template and benefits.",
        "description": "To email template list",
        "operationId": "getProgram",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          } ,
          {
            "in": "query",
            "name": "categoryId",
            "description": "categoryId number",
            "required": true,  
            "type": "integer"
          }              
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/search": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get search Videos and Auto home.",
        "description": "To search list",
        "operationId": "search",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          } ,
          {
            "in": "query",
            "name": "keyword",
            "description": "keyword to be searched",
            "required": true,  
            "type": "string"
          }              
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getParentCategory": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get Parent Category.",
        "description": "To Parent Category list",
        "operationId": "getParentCategory",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }               
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }, 
    "/user/getUserList": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get USer list.",
        "description": "To usermanagement list isBlocked(0=>active,1=>Inactive)",
        "operationId": "getUserList",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "search",
            "description": "search keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },   
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/user/getClientList": {
      "get": {
        "tags": [
          "User API"
        ],
        "summary": "Get Client list.",
        "description": "To client management list isBlocked(0=>active,1=>Inactive)",
        "operationId": "getClientList",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "search",
            "description": "search keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },   
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Login Admin.",
        "description": "To login Admin into account",
        "operationId": "LoginAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/adminLogin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getDepartment": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get Department list.",
        "description": "To getDepartment list",
        "operationId": "getDepartment",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }     
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/addAdmin": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add Admin.",
        "description": "To Add admin by super admin departmentId for (Relationship Manager / Sale Manager) ",
        "operationId": "addAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/addAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getAdmin": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get Admin list.",
        "description": "To getAdmin list isBlocked(0=>active,1=>Inactive)",
        "operationId": "getAdmin",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "search",
            "description": "search keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },   
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/blockUnblockAdmin": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "block Unblock admin.",
        "description": "To block and unblock admin",
        "operationId": "blockUnblockAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockUnblockAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/updateAdmin": {
      "put": {
        "tags": [
          "Admin API"
        ],
        "summary": "Update Admin Profile.",
        "description": "To update Admin Profile departmentId (Relationship Manager / Sale Manager)",
        "operationId": "updateAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/deleteAdmin": {
      "delete": {
        "tags": [
          "Admin API"
        ],
        "summary": "delete Admin.",
        "description": "To delete Admin",
        "operationId": "deleteAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/updateProfile": {
      "put": {
        "tags": [
          "Admin API"
        ],
        "summary": "Update All types of Profile.",
        "description": "To update Admin/super/user Profile type parameter (SuperAdmin/Admin/Normal)",
        "operationId": "updateProfileAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateProfileAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getProfile": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get all type Profile.",
        "description": "To getProfile list",
        "operationId": "getProfile",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }               
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/resetAdminPassword": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "resend password admin.",
        "description": "To resend password to admin",
        "operationId": "resetAdminPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetAdminPassword"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changePassword": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Change Password.",
        "description": "To Change Password Admin",
        "operationId": "change_password_admin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changePasswordAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/forgotPassword": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Forgot Password.",
        "description": "To Forgot Password",
        "operationId": "forgot_password_admin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/forgotPasswordAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/resetForgotPassword": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Reset admin.",
        "description": "To reset admin password into account",
        "operationId": "resetForgotPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resetForgotPasswordAdmin"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/addPartner": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add addPartner.",
        "description": "To Add users under partner/organization manager(0=>No, 1=>yes) primaryContact(0=>No, 1=>yes) contactType(Broker,Client) ",
        "operationId": "addPartner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/addPartner"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/assignUserToPartner": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add assignUserToPartner.",
        "description": "To Add users under partner/organization manager(0=>No, 1=>yes) primaryContact(0=>No, 1=>yes) contactType(Broker,Client) ",
        "operationId": "assignUserToPartner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/assignUserToPartner"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },   
    "/admin/getAllPartner": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get getAllPartner list with associated users.",
        "description": "To getAllPartner list with associated users",
        "operationId": "getAllPartner",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          } ,
          {
            "in": "query",
            "name": "search",
            "description": "keyword to be searched",
            "required": false,  
            "type": "string"
          },
          {
            "in": "query",
            "name": "primaryContact",
            "description": "primaryContact to be searched(0/1)",
            "required": false,  
            "default":0,  
            "type": "string"
          },
          {
            "in": "query",
            "name": "payroll",
            "description": "payroll to be searched (Yes/No)",
            "required": false, 
            "default":"Yes", 
            "type": "string"
          },
          {
            "in": "query",
            "name": "broker",
            "description": "broker to be searched (Yes/No)",
            "required": false,  
            "default":"Yes", 
            "type": "string"
          }  ,
          {
            "in": "query",
            "name": "active",
            "description": "active to be searched(0/1)",
            "required": false, 
            "default":0,  
            "type": "string"
          },
          {
            "in": "query",
            "name": "contactType",
            "description": "contactType to be searched(Client/Broker)",
            "required": false,  
            "default":"Client", 
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerId",
            "description": "partnerId to be searched",
            "required": false, 
            "type": "integer"
          } 
          
          
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getPartner": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get getPartner list only without associated users.",
        "description": "To getPartner list only",
        "operationId": "getPartner",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }     
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changeBlockStatus": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "block Unblock user Access.",
        "description": "To block and unblock user Access",
        "operationId": "changeBlockStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeBlockStatus"
            }
          }      
      ] ,
      "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changeManagerStatus": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "change Manager Status Access.",
        "description": "To change Manager Status user Access",
        "operationId": "changeManagerStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeManagerStatus"
            }
          }      
      ] ,
      "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changePrimaryContactStatus": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "change Primary Contact Status Status Access.",
        "description": "To change Primary Contact Status Status user Access",
        "operationId": "changePrimaryContactStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changePrimaryContactStatus"
            }
          }      
      ] ,
      "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/updatePartner": {
      "put": {
        "tags": [
          "Admin API"
        ],
        "summary": "Update Partner profile.",
        "description": "To update partner",
        "operationId": "updatePartner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updatePartner"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/updateUser": {
      "put": {
        "tags": [
          "Admin API"
        ],
        "summary": "Update user profile.",
        "description": "To update user",
        "operationId": "updateUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/deletePartner": {
      "delete": {
        "tags": [
          "Admin API"
        ],
        "summary": "delete partner.",
        "description": "To delete partner",
        "operationId": "deletePartner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/deletePartner"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/deleteUser": {
      "delete": {
        "tags": [
          "Admin API"
        ],
        "summary": "delete user.",
        "description": "To delete user",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteUser"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/addUserByManager": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add addUserByManager.",
        "description": "To Add users under partner/organization manager(0=>No, 1=>yes) primaryContact(0=>No, 1=>yes) contactType(Broker,Client) ",
        "operationId": "addUserByManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUserByManager"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/updateUserByManager": {
      "put": {
        "tags": [
          "Admin API"
        ],
        "summary": "Update user profile by manager.",
        "description": "To update user by manager",
        "operationId": "updateUserByManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/updateUserByManager"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getUserByManager": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get USer list.",
        "description": "To userm anagement list isBlocked(0=>active,1=>Inactive)",
        "operationId": "getUserByManager",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "search",
            "description": "search keyword",
            "required": false,
            "schema": {
              "type": "string"
            }
          },   
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changeBlockStatusByManager": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "block Unblock user Access.",
        "description": "To block and unblock user Access",
        "operationId": "changeBlockStatusByManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeBlockStatusByManager"
            }
          }      
      ] ,
      "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/changeManagerStatusByManager": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "manager user Access.",
        "description": "To change manager status",
        "operationId": "changeManagerStatusByManager",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/changeManagerStatusByManager"
            }
          }      
      ] ,
      "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getClient": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get getClient list.",
        "description": "To getClient list",
        "operationId": "getClient",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/blockSiteAccess": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "block Unblock site Access.",
        "description": "To block and unblock site Access",
        "operationId": "blockUnblockSiteAccessblockAdmin",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockSiteAccess"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/blockUnblockClient": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "block Unblock client.",
        "description": "To block and unblock client",
        "operationId": "blockUnblockClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/blockUnblockClient"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/deleteClient": {
      "delete": {
        "tags": [
          "Admin API"
        ],
        "summary": "delete client.",
        "description": "To delete client",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/deleteClient"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/resendClientInvitation": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add Resend client invitation.",
        "description": "To Resend client invitation",
        "operationId": "resendClientInvitation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resendClientInvitation"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/dashboard": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get dashboard.",
        "description": "To dashboard",
        "operationId": "dashboard",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          }               
        ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },

    "/admin/addUser": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add User.",
        "description": "To Add user into account (role=>Normal)",
        "operationId": "addUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/addUser"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/resendOTP": {
      "post": {
        "tags": [
          "Admin API"
        ],
        "summary": "Add User.",
        "description": "To Resent user passwod",
        "operationId": "resendOTP",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "body",
            "name": "body",           
            "required": true,
            "schema": {
              "$ref": "#/definitions/resendOTP"
            }
          }      
      ] 
      ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/admin/getUser": {
      "get": {
        "tags": [
          "Admin API"
        ],
        "summary": "Get User list.",
        "description": "To getUser list",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ] ,
        "parameters": [
          {
            "name": "Authorization",
            "description": "JWT token",
            "in": "header",
            "required": true,
            "type": "string",
            "default": "Bearer {token}"
          },
          {
            "in": "query",
            "name": "page",
            "description": "page numebr",
            "required": true,
            "default":1,
            "schema": {
              "type": "integer"
            }
          }      
      ] ,
        "responses": {
          "200": {
            "description": "Success"
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
    }
  },
  "definitions": {
    "signIn": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"         
        },
        "password": {
          "type": "string"
        }
      }
    },
    "signUp": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"         
        },
        "lastname": {
          "type": "string"         
        },
        "email": {
          "type": "string"         
        },
        "role": {
          "type": "string",
          "example": "Broker"
        },
        "phone": {
          "type": "integer"
        }
      }
    },
    "changePassword": {
      "type": "object",
      "properties": {
        "current_pass": {
          "type": "string"         
        },
        "new_pass": {
          "type": "string"
        },
        "confirm_pass": {
          "type": "string"
        }
      }
    },
    "updateProfile": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "resetPassword": {
      "type": "object",
      "properties": {       
        "new_pass": {
          "type": "string"
        },
        "confirm_pass": {
          "type": "string"
        }
      }
    },
    "forgotPassword": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"         
        }
      }
    },
    "resetForgotPassword": {
      "type": "object",
      "properties": {
        "resetPasswordToken": {
          "type": "string"         
        },
        "new_pass": {
          "type": "string"
        },
        "confirm_pass": {
          "type": "string"
        }
      }
    },
    "resendClientInvitation": {
      "type": "object",
      "properties": {       
        "userId": {
          "type": "number"
        }       
      }
    },


    "adminLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"         
        },
        "password": {
          "type": "string"
        }
      }
    },
    "addAdmin": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"         
        },  
        "lastName": {
          "type": "string"         
        }, 
        "email": {
          "type": "string"         
        },
        "departmentId": {
          "type": "number"    
        }
      }
    },
    "blockUnblockAdmin": {
      "type": "object",
      "properties": {
        "isBlocked": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "deleteAdmin": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"         
        }       
      }
    },
    "updateAdmin": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"   
        }, 
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"         
        },
        "departmentId": {
          "type": "number"   
        }, 
        "email": {
          "type": "string"
        }
      }
    },
    "updatePartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "number"   
        }, 
        "clientName": {
          "type": "string"         
        },
        "url": {
          "type": "string"         
        },
        "email": {
          "type": "string"
        },
        "brokered": {
          "type": "string",
          "default":"Yes"
        },
        "payroll": {
          "type": "string",
          "default":"Yes"
        }
      }
    },
    "updateUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"   
        }, 
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"         
        },
        "contactType": {
          "type": "string",
          "default":"Client"
        },
        "manager": {
          "type": "integer",
          "default":0
        }
      }
    },
    "updateUserByManager": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"   
        }, 
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"         
        },
        "contactType": {
          "type": "string",
          "default":"Client"
        }
      }
    },
    "updateProfileAdmin": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"         
        },
        "type": {
          "type": "string"  ,
          "default":"SuperAdmin"      
        }
      }
    },
    "resetAdminPassword": {
      "type": "object",
      "properties": {        
        "userId": {
          "type": "number"         
        }       
      }
    },
    "changePasswordAdmin": {
      "type": "object",
      "properties": {
        "current_pass": {
          "type": "string"         
        },
        "new_pass": {
          "type": "string"
        },
        "confirm_pass": {
          "type": "string"
        }
      }
    },
    "forgotPasswordAdmin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"         
        }
      }
    },
    "resetForgotPasswordAdmin": {
      "type": "object",
      "properties": {
        "resetPasswordToken": {
          "type": "string"         
        },
        "new_pass": {
          "type": "string"
        },
        "confirm_pass": {
          "type": "string"
        }
      }
    },
    "blockSiteAccess": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "blockUnblockClient": {
      "type": "object",
      "properties": {
        "isBlocked": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "deleteClient": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"         
        }       
      }
    },
    "deletePartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "number"         
        }       
      }
    },
    "deleteUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number"         
        }       
      }
    },
    "addPartner": {
      "type": "object",
      "properties": {
        "partnerName": {
          "type": "string"         
        }, 
        "brokered": {
          "type": "string",
          "default":"Yes"         
        },
        "payroll": {
          "type": "string" ,
          "default":"No"       
        },
        "emailUrl": {
          "type": "string"         
        }, 
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleUsers"
          }      
        }
      }
    },
   
    "assignUserToPartner": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "number"         
        },  
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleUsers"
          }      
        }
      }
    },
    "addUserByManager": {
      "type": "object",
      "properties": {
        "partnerId": {
          "type": "number"         
        },  
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/multipleUsersByManger"
          }      
        }
      }
    },
    "multipleUsersByManger": {
      "type": "object",
      "properties": {       
        "firstName": {
            "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
            "type": "string"
        },
        "contactType": {
            "type": "string",
            "default":"Client"
        }      
      }
    },
    "multipleUsers": {
      "type": "object",
      "properties": {       
        "firstName": {
            "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
            "type": "string"
        },
        "contactType": {
            "type": "string",
            "default":"Client"
        },
        "primaryContact": {
          "type": "number",
          "default":0
        },
        "manager": {
          "type": "number",
          "default":0
        }        
      }
    },
    "addUser": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"         
        },
        "lastName": {
          "type": "string"         
        },
        "email": {
          "type": "string"         
        },
        "role": {
          "type": "string",
          "example": "Normal"
        },
        "brokered": {
          "type": "string",
          "example": "Yes"
        },
        "payroll": {
          "type": "string",
          "example": "Yes"
        },
        "url": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/addURL"
          }
        }
      }
    },

    "addURL": {
      "type": "object",
      "properties": {       
        "clientName": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }       
      }
    },
    "resendOTP": {
      "type": "object",
      "properties": {       
        "userId": {
          "type": "number"
        }       
      }
    },
    "changeBlockStatus": {
      "type": "object",
      "properties": {
        "isBlocked": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "changePrimaryContactStatus": {
      "type": "object",
      "properties": {
        "isPrimary": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "changeManagerStatus": {
      "type": "object",
      "properties": {
        "isManager": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "changeBlockStatusByManager": {
      "type": "object",
      "properties": {
        "isBlocked": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "changeManagerStatusByManager": {
      "type": "object",
      "properties": {
        "isManager": {
          "type": "number"         
        },
        "userId": {
          "type": "number"         
        }       
      }
    },
    "SuccessResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "success"
        },
        "message": {
          "type": "string",
          "example": "Some relevent message"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "error"
        },
        "message": {
          "type": "string",
          "description": "Error message.",
          "example": "Network error found. Please try after some time."
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}